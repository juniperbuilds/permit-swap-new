{"ast":null,"code":"var _jsxFileName = \"/Users/safe/permit-swap-website/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Render the App component into the div with id 'root'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nconst express = require('express');\nconst cors = require('cors');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst app = express();\nconst port = 3000;\nconst secret = 'your_jwt_secret'; // Store securely\n\nlet permits = [];\nlet users = [];\napp.use(cors());\napp.use(express.json());\n\n// JWT verification middleware\nfunction verifyToken(req, res, next) {\n  const token = req.headers['authorization'];\n  if (!token) {\n    return res.status(403).json({\n      message: 'No token provided'\n    });\n  }\n  jwt.verify(token, secret, (err, decoded) => {\n    if (err) {\n      return res.status(401).json({\n        message: 'Failed to authenticate token'\n      });\n    }\n    req.user = decoded; // Save the decoded token to req.user\n    next();\n  });\n}\n\n// User registration\napp.post('/register', (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const hashedPassword = bcrypt.hashSync(password, 8);\n  users.push({\n    username,\n    password: hashedPassword\n  });\n  res.status(201).json({\n    message: 'User registered successfully!'\n  });\n});\n\n// User login\napp.post('/login', (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const user = users.find(u => u.username === username);\n  if (!user || !bcrypt.compareSync(password, user.password)) {\n    return res.status(401).json({\n      message: 'Invalid credentials'\n    });\n  }\n  const token = jwt.sign({\n    username: user.username\n  }, secret, {\n    expiresIn: '1h'\n  });\n  res.json({\n    token\n  });\n});\n\n// Protected route: Add a new permit\napp.post('/permits', verifyToken, (req, res) => {\n  const {\n    location,\n    type,\n    startDate,\n    endDate\n  } = req.body;\n  const newPermit = {\n    location,\n    type,\n    startDate,\n    endDate\n  };\n  permits.push(newPermit);\n  res.status(201).json(newPermit);\n});\napp.get('/permits', (req, res) => {\n  res.json(permits);\n});\napp.get('/', (req, res) => {\n  res.send('Permit Swap API is running');\n});\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}`);\n});","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","render","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","express","require","cors","bcrypt","jwt","app","port","secret","permits","users","use","json","verifyToken","req","res","next","token","headers","status","message","verify","err","decoded","user","post","username","password","body","hashedPassword","hashSync","push","find","u","compareSync","sign","expiresIn","location","type","startDate","endDate","newPermit","get","send","listen","console","log"],"sources":["/Users/safe/permit-swap-website/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Render the App component into the div with id 'root'\nReactDOM.render(<App />, document.getElementById('root'));\n\nconst express = require('express');\nconst cors = require('cors');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst app = express();\nconst port = 3000;\nconst secret = 'your_jwt_secret'; // Store securely\n\nlet permits = [];\nlet users = [];\n\napp.use(cors());\napp.use(express.json());\n\n// JWT verification middleware\nfunction verifyToken(req, res, next) {\n  const token = req.headers['authorization'];\n  if (!token) {\n    return res.status(403).json({ message: 'No token provided' });\n  }\n  jwt.verify(token, secret, (err, decoded) => {\n    if (err) {\n      return res.status(401).json({ message: 'Failed to authenticate token' });\n    }\n    req.user = decoded; // Save the decoded token to req.user\n    next();\n  });\n}\n\n// User registration\napp.post('/register', (req, res) => {\n  const { username, password } = req.body;\n  const hashedPassword = bcrypt.hashSync(password, 8);\n  users.push({ username, password: hashedPassword });\n  res.status(201).json({ message: 'User registered successfully!' });\n});\n\n// User login\napp.post('/login', (req, res) => {\n  const { username, password } = req.body;\n  const user = users.find(u => u.username === username);\n  if (!user || !bcrypt.compareSync(password, user.password)) {\n    return res.status(401).json({ message: 'Invalid credentials' });\n  }\n  const token = jwt.sign({ username: user.username }, secret, { expiresIn: '1h' });\n  res.json({ token });\n});\n\n// Protected route: Add a new permit\napp.post('/permits', verifyToken, (req, res) => {\n  const { location, type, startDate, endDate } = req.body;\n  const newPermit = { location, type, startDate, endDate };\n  permits.push(newPermit);\n  res.status(201).json(newPermit);\n});\n\napp.get('/permits', (req, res) => {\n  res.json(permits);\n});\n\napp.get('/', (req, res) => {\n  res.send('Permit Swap API is running');\n});\n\napp.listen(port, () => {\n  console.log(`Server is listening on port ${port}`);\n});\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,QAAQ,CAACI,MAAM,cAACD,OAAA,CAACF,GAAG;EAAAI,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEzD,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMG,GAAG,GAAGH,OAAO,CAAC,cAAc,CAAC;AACnC,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrB,MAAMM,IAAI,GAAG,IAAI;AACjB,MAAMC,MAAM,GAAG,iBAAiB,CAAC,CAAC;;AAElC,IAAIC,OAAO,GAAG,EAAE;AAChB,IAAIC,KAAK,GAAG,EAAE;AAEdJ,GAAG,CAACK,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;AACfG,GAAG,CAACK,GAAG,CAACV,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA,SAASC,WAAWA,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnC,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAO,CAAC,eAAe,CAAC;EAC1C,IAAI,CAACD,KAAK,EAAE;IACV,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MAAEQ,OAAO,EAAE;IAAoB,CAAC,CAAC;EAC/D;EACAf,GAAG,CAACgB,MAAM,CAACJ,KAAK,EAAET,MAAM,EAAE,CAACc,GAAG,EAAEC,OAAO,KAAK;IAC1C,IAAID,GAAG,EAAE;MACP,OAAOP,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;QAAEQ,OAAO,EAAE;MAA+B,CAAC,CAAC;IAC1E;IACAN,GAAG,CAACU,IAAI,GAAGD,OAAO,CAAC,CAAC;IACpBP,IAAI,CAAC,CAAC;EACR,CAAC,CAAC;AACJ;;AAEA;AACAV,GAAG,CAACmB,IAAI,CAAC,WAAW,EAAE,CAACX,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAM;IAAEW,QAAQ;IAAEC;EAAS,CAAC,GAAGb,GAAG,CAACc,IAAI;EACvC,MAAMC,cAAc,GAAGzB,MAAM,CAAC0B,QAAQ,CAACH,QAAQ,EAAE,CAAC,CAAC;EACnDjB,KAAK,CAACqB,IAAI,CAAC;IAAEL,QAAQ;IAAEC,QAAQ,EAAEE;EAAe,CAAC,CAAC;EAClDd,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;IAAEQ,OAAO,EAAE;EAAgC,CAAC,CAAC;AACpE,CAAC,CAAC;;AAEF;AACAd,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE,CAACX,GAAG,EAAEC,GAAG,KAAK;EAC/B,MAAM;IAAEW,QAAQ;IAAEC;EAAS,CAAC,GAAGb,GAAG,CAACc,IAAI;EACvC,MAAMJ,IAAI,GAAGd,KAAK,CAACsB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,QAAQ,KAAKA,QAAQ,CAAC;EACrD,IAAI,CAACF,IAAI,IAAI,CAACpB,MAAM,CAAC8B,WAAW,CAACP,QAAQ,EAAEH,IAAI,CAACG,QAAQ,CAAC,EAAE;IACzD,OAAOZ,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MAAEQ,OAAO,EAAE;IAAsB,CAAC,CAAC;EACjE;EACA,MAAMH,KAAK,GAAGZ,GAAG,CAAC8B,IAAI,CAAC;IAAET,QAAQ,EAAEF,IAAI,CAACE;EAAS,CAAC,EAAElB,MAAM,EAAE;IAAE4B,SAAS,EAAE;EAAK,CAAC,CAAC;EAChFrB,GAAG,CAACH,IAAI,CAAC;IAAEK;EAAM,CAAC,CAAC;AACrB,CAAC,CAAC;;AAEF;AACAX,GAAG,CAACmB,IAAI,CAAC,UAAU,EAAEZ,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC9C,MAAM;IAAEsB,QAAQ;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAG1B,GAAG,CAACc,IAAI;EACvD,MAAMa,SAAS,GAAG;IAAEJ,QAAQ;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC;EACxD/B,OAAO,CAACsB,IAAI,CAACU,SAAS,CAAC;EACvB1B,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC6B,SAAS,CAAC;AACjC,CAAC,CAAC;AAEFnC,GAAG,CAACoC,GAAG,CAAC,UAAU,EAAE,CAAC5B,GAAG,EAAEC,GAAG,KAAK;EAChCA,GAAG,CAACH,IAAI,CAACH,OAAO,CAAC;AACnB,CAAC,CAAC;AAEFH,GAAG,CAACoC,GAAG,CAAC,GAAG,EAAE,CAAC5B,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAAC4B,IAAI,CAAC,4BAA4B,CAAC;AACxC,CAAC,CAAC;AAEFrC,GAAG,CAACsC,MAAM,CAACrC,IAAI,EAAE,MAAM;EACrBsC,OAAO,CAACC,GAAG,CAAC,+BAA+BvC,IAAI,EAAE,CAAC;AACpD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}